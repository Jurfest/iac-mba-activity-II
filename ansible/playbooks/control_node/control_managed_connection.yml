---
# This playbook should be the first one to run. It performs a configuration on 
# SSH keys that allows the control node to access the managed node without 
# explicitly specifying the public key.

- name: Gerar chave SSH no nó de controle
  hosts: control_node
  tasks:
    - name: Gerar chave SSH e salvar em uma variável
      shell: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -q -N ""
      args:
        creates: ~/.ssh/id_rsa
      register: ssh_keygen_output

    - name: Copiar chave pública gerada para o controlador
      fetch:
        src: ~/.ssh/id_rsa.pub
        dest: /tmp/ssh_key.pub
        flat: yes

- name: Adicionar chave pública ao arquivo authorized_keys no nó gerenciado
  hosts: managed_node
  tasks:
    - name: Adicionar chave pública ao arquivo authorized_keys
      authorized_key:
        user: ec2-user
        key: "{{ lookup('file', '/tmp/ssh_key.pub') }}"
        state: present

# - name: Gerar e adicionar chave SSH no nó de controle
#   hosts: control_node
#   tasks:
#     - name: Gerar chave SSH
#       shell: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -q -N ""
#       args:
#         creates: ~/.ssh/id_rsa

#     - name: Extrair chave pública
#       shell: cat ~/.ssh/id_rsa.pub
#       register: public_key_output

#     - name: Definir chave pública como uma variável
#       set_fact:
#         ssh_public_key: "{{ public_key_output.stdout }}"

# - name: Adicionar chave pública ao arquivo authorized_keys no nó gerenciado
#   hosts: managed_node
#   tasks:
#     - name: Adicionar chave pública ao arquivo authorized_keys
#       lineinfile:
#         path: ~/.ssh/authorized_keys
#         line: "{{ ssh_public_key }}"
#         create: yes
#         owner: ec2-user
#         group: ec2-user
#         mode: '0600'
